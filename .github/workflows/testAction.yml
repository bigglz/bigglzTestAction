# This is a basic workflow to help you get started with Actions

name: NaverWorksPushMessage

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      accountId:
        description: 'accountId'
        required: false
        default: 'hong@bigglz.com'
      message:
        description: 'Message'
        required: false
        default: 'hello Ìôç'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
          
      - name: Create JWT Header
        id: jwt_header
        run: echo -n "::set-output name=header::$(echo -n '{"alg":"RS256","typ":"JWT"}' | base64 | sed s/\+/-/ | sed -E s/=+$//)"
        
      - name: Get Current Time
        id: current_time
        run: echo "::set-output name=date::$(date +%s)"
      
      - name: Get Add One Hour Current Time
        id: add_hour_time
        run: echo "::set-output name=date::$(date -d '+30 minutes' '+%s')"
      
      - name: Create JWT Payload
        id: jwt_payload
        run: echo -n "::set-output name=payload::$(echo -n '{"iss":"${{ secrets.NAVERWORKS_SERVER_ID }}","iat":${{ steps.current_time.outputs.date }},"exp":${{ steps.add_hour_time.outputs.date }}}' | base64 | tr -d '\n' | sed s/\+/-/ | sed -E s/=+$//)"
      
      - name: Create JWT Signature
        id: jwt_signature
        run: echo -n "::set-output name=signature::$(echo -n "${{ steps.jwt_header.outputs.header }}.${{ steps.jwt_payload.outputs.payload }}" | openssl dgst -sha256 -binary -sign ${{ '.github/secrets/text.key' }} | openssl enc -base64 | tr -d '\n=' | tr -- '+/' '-_')"
        
      - name: Token
        id: access_token
        run: |
          echo -n "::set-output name=token::$( \
          curl -X POST https://auth.worksmobile.com/b/${{ secrets.NAVERWORKS_API_ID }}/server/token \
          -H 'content-type: application/x-www-form-urlencoded; charset=UTF-8' \
          -d 'grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer&assertion=${{ steps.jwt_header.outputs.header }}.${{ steps.jwt_payload.outputs.payload }}.${{ steps.jwt_signature.outputs.signature }}' \
          | sed -n 's|.*"access_token": *"\([^"]*\)".*|\1|p' \
          )"
          
      - name: Push Message
        run: |
          curl -X POST https://apis.worksmobile.com/r/${{ secrets.NAVERWORKS_API_ID }}/message/v1/bot/${{ secrets.NAVERWORKS_BOT_NO }}/message/push \
          -H 'Authorization: Bearer ${{ steps.access_token.outputs.token }}' \
          -H 'content-type: application/json; charset=UTF-8' \
          -H 'consumerKey: ${{ secrets.NAVERWORKS_CONSUMER_KEY }}' \
          -d '{"accountId": "${{ github.event.inputs.accountId }}","content": {"type": "text","text":"${{ github.event.inputs.message }}"}}'
          
